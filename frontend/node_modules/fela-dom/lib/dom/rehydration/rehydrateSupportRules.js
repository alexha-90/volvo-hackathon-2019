'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = rehydrateSupportRules;

var _extractSupportQuery = require('./extractSupportQuery');

var _extractSupportQuery2 = _interopRequireDefault(_extractSupportQuery);

var _rehydrateRules = require('./rehydrateRules');

var _rehydrateRules2 = _interopRequireDefault(_rehydrateRules);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SUPPORT_REGEX = /@supports[^{]+\{([\s\S]+?})\s*}/gi;

function rehydrateSupportRules(css) {
  var media = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var decl = void 0;

  // eslint-disable-next-line no-cond-assign
  while (decl = SUPPORT_REGEX.exec(css)) {
    var _decl = decl,
        _decl2 = _slicedToArray(_decl, 2),
        ruleSet = _decl2[0],
        cssRules = _decl2[1];

    var supportQuery = (0, _extractSupportQuery2.default)(ruleSet);
    (0, _rehydrateRules2.default)(cssRules, media, supportQuery, cache);
  }

  return cache;
}