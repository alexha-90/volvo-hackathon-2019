'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rehydrate;

var _arrayEach = require('fast-loops/lib/arrayEach');

var _arrayEach2 = _interopRequireDefault(_arrayEach);

var _felaUtils = require('fela-utils');

var _rehydrateSupportRules = require('./rehydration/rehydrateSupportRules');

var _rehydrateSupportRules2 = _interopRequireDefault(_rehydrateSupportRules);

var _rehydrateRules = require('./rehydration/rehydrateRules');

var _rehydrateRules2 = _interopRequireDefault(_rehydrateRules);

var _calculateNodeScore = require('./connection/calculateNodeScore');

var _calculateNodeScore2 = _interopRequireDefault(_calculateNodeScore);

var _render = require('./render');

var _render2 = _interopRequireDefault(_render);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CLASSNAME_REGEX = /[.][a-z0-9_-]*/gi;

// rehydration (WIP)
// TODO: static, keyframe, font
function rehydrate(renderer) {
  (0, _render2.default)(renderer);

  (0, _arrayEach2.default)(document.querySelectorAll('[data-fela-type]'), function (node) {
    var rehydrationAttribute = node.getAttribute('data-fela-rehydration') || -1;
    var rehydrationIndex = renderer.uniqueRuleIdentifier || parseInt(rehydrationAttribute, 10);

    // skip rehydration if no rehydration index is set
    // this index is set to -1 if something blocks rehydration
    if (rehydrationIndex !== -1) {
      var type = node.getAttribute('data-fela-type') || '';
      var media = node.getAttribute('media') || '';
      var support = node.getAttribute('data-fela-support') || '';
      var css = node.textContent;

      renderer.uniqueRuleIdentifier = rehydrationIndex;

      var reference = type + media + support;
      renderer.nodes[reference] = {
        score: (0, _calculateNodeScore2.default)({ type: type, media: media, support: support }, renderer.mediaQueryOrder),
        node: node
      };

      if (type === _felaUtils.RULE_TYPE) {
        if (support) {
          (0, _rehydrateSupportRules2.default)(css, media, renderer.cache);
        } else {
          (0, _rehydrateRules2.default)(css, media, '', renderer.cache);
        }

        // On Safari, style sheets with IE-specific media queries
        // can yield null for node.sheet
        // https://github.com/rofrischmann/fela/issues/431#issuecomment-423239591
        if (node.sheet && node.sheet.cssRules) {
          var nodeReference = media + support;

          (0, _arrayEach2.default)(node.sheet.cssRules, function (rule, index) {
            var selectorText = rule.conditionText ? rule.cssRules[0].selectorText : rule.selectorText;

            var score = (0, _felaUtils.getRuleScore)(renderer.ruleOrder, selectorText.split(CLASSNAME_REGEX)[1]);

            if (score === 0) {
              renderer.scoreIndex[nodeReference] = index;
            }

            rule.score = score;
          });
        }
      }
    }
  });
}