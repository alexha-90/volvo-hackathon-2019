'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = renderToMarkup;

var _arrayReduce = require('fast-loops/lib/arrayReduce');

var _arrayReduce2 = _interopRequireDefault(_arrayReduce);

var _objectReduce = require('fast-loops/lib/objectReduce');

var _objectReduce2 = _interopRequireDefault(_objectReduce);

var _felaUtils = require('fela-utils');

var _createStyleTagMarkup = require('./createStyleTagMarkup');

var _createStyleTagMarkup2 = _interopRequireDefault(_createStyleTagMarkup);

var _getRehydrationIndex = require('./getRehydrationIndex');

var _getRehydrationIndex2 = _interopRequireDefault(_getRehydrationIndex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function renderToMarkup(renderer) {
  var cacheCluster = (0, _felaUtils.clusterCache)(renderer.cache, renderer.mediaQueryOrder, renderer.supportQueryOrder, renderer.ruleOrder);

  var rehydrationIndex = (0, _getRehydrationIndex2.default)(renderer);

  var styleMarkup = (0, _objectReduce2.default)(_felaUtils.sheetMap, function (markup, type, key) {
    if (cacheCluster[key].length > 0) {
      markup += (0, _createStyleTagMarkup2.default)(cacheCluster[key], type, '', rehydrationIndex);
    }

    return markup;
  }, '');

  var support = (0, _felaUtils.cssifySupportRules)(cacheCluster.supportRules);

  if (support) {
    styleMarkup += (0, _createStyleTagMarkup2.default)(support, _felaUtils.RULE_TYPE, '', rehydrationIndex, true);
  }

  var mediaKeys = Object.keys(_extends({}, cacheCluster.supportMediaRules, cacheCluster.mediaRules));

  return (0, _arrayReduce2.default)(mediaKeys, function (markup, media) {
    // basic media query rules
    if (cacheCluster.mediaRules[media] && cacheCluster.mediaRules[media].length > 0) {
      markup += (0, _createStyleTagMarkup2.default)(cacheCluster.mediaRules[media], _felaUtils.RULE_TYPE, media, rehydrationIndex);
    }

    // support media rules
    if (cacheCluster.supportMediaRules[media]) {
      var mediaSupport = (0, _felaUtils.cssifySupportRules)(cacheCluster.supportMediaRules[media]);

      if (mediaSupport.length > 0) {
        markup += (0, _createStyleTagMarkup2.default)(mediaSupport, _felaUtils.RULE_TYPE, media, rehydrationIndex, true);
      }
    }

    return markup;
  }, styleMarkup);
}