"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "getISOLocalDate", {
  enumerable: true,
  get: function get() {
    return _dates.getISOLocalDate;
  }
});
Object.defineProperty(exports, "getYear", {
  enumerable: true,
  get: function get() {
    return _dates.getYear;
  }
});
Object.defineProperty(exports, "getMonth", {
  enumerable: true,
  get: function get() {
    return _dates.getMonth;
  }
});
Object.defineProperty(exports, "getDay", {
  enumerable: true,
  get: function get() {
    return _dates.getDay;
  }
});
Object.defineProperty(exports, "getHoursMinutesSeconds", {
  enumerable: true,
  get: function get() {
    return _dates2.getHoursMinutesSeconds;
  }
});
Object.defineProperty(exports, "getHoursMinutes", {
  enumerable: true,
  get: function get() {
    return _dates2.getHoursMinutes;
  }
});
Object.defineProperty(exports, "convert12to24", {
  enumerable: true,
  get: function get() {
    return _dates2.convert12to24;
  }
});
Object.defineProperty(exports, "convert24to12", {
  enumerable: true,
  get: function get() {
    return _dates2.convert24to12;
  }
});
Object.defineProperty(exports, "getHours", {
  enumerable: true,
  get: function get() {
    return _dates3.getHours;
  }
});
Object.defineProperty(exports, "getMinutes", {
  enumerable: true,
  get: function get() {
    return _dates3.getMinutes;
  }
});
Object.defineProperty(exports, "getSeconds", {
  enumerable: true,
  get: function get() {
    return _dates3.getSeconds;
  }
});
exports.getISOLocalDateTime = void 0;

var _dates = require("react-calendar/dist/shared/dates");

var _dates2 = require("react-time-picker/dist/shared/dates");

var _dates3 = require("react-clock/dist/shared/dates");

// eslint-disable-next-line import/prefer-default-export
var getISOLocalDateTime = function getISOLocalDateTime(value) {
  if (!value) {
    return value;
  }

  var date = new Date(value);

  if (isNaN(date.getTime())) {
    throw new Error("Invalid date: ".concat(value));
  }

  return "".concat((0, _dates.getISOLocalDate)(date), "T").concat((0, _dates2.getHoursMinutesSeconds)(date));
};

exports.getISOLocalDateTime = getISOLocalDateTime;