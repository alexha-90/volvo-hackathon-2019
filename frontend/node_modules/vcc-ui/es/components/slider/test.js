function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from "react";
import { Slider } from ".";
import volvoTheme from "../../themes/volvo";
import createSnapshot from "../../test/create-snapshot";
describe("<Slider /> snapshot tests", function () {
  it("renders with numerical range", function () {
    var snapshot = createSnapshot(React.createElement(Slider, {
      initialValue: 3,
      step: 1,
      minValue: 1,
      maxValue: 5
    }));
    expect(snapshot).toMatchSnapshot();
  });
  it("renders with valueList", function () {
    var snapshot = createSnapshot(React.createElement(Slider, {
      initialValue: 1,
      valueList: [0, 1, 2, 3, 5, 8, 13, 21, 34, 66, 89, 144]
    }));
    expect(snapshot).toMatchSnapshot();
  });
  it("renders <Slider /> correctly with theme", function () {
    var theme = _objectSpread({}, volvoTheme, {
      styles: {
        slider: {
          background: "orange"
        },
        sliderTrack: {
          border: "25px"
        }
      }
    });

    var snapshot = createSnapshot(React.createElement(Slider, {
      initialValue: 1,
      valueList: [0, 1, 2, 3, 5, 8, 13, 21, 34, 66, 89, 144]
    }), theme);
    expect(snapshot).toMatchSnapshot();
  });
});