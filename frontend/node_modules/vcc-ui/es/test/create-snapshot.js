function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { createSnapshot as createFelaSnapshot } from "jest-react-fela";
import monolithic from "fela-monolithic";
import { enhance } from "fela";
import { StyleProvider } from "../style-provider";
import { ThemeProvider } from "../theme-provider";
import { styleRenderer } from "../style-renderer";
import volvoTheme from "../themes/volvo";

function getMonolithicRenderer() {
  return enhance(monolithic())(styleRenderer)();
} // The snapshot will try to pick up named classnames from this list
// if it happens to find a matching named key from the theme.styles


var components = ["arrow", "button", "checkbox", "icon", "link", "logo", "nav", "navItem", "selectInput", "selectInputValue", "selectInputOptions", "selectInputOption", "slider", "sliderTrack", "sliderThumb", "spinner", "tabNav", "tabNavItem", "textInput", "toggle"];

function addClassNameToTheme(theme, name) {
  if (!theme.styles) {
    theme.styles = {};
  }

  if (!theme.styles[name]) {
    theme.styles[name] = {};
  }

  theme.styles[name].className = name;
  return theme;
}

var baseTheme = _objectSpread({}, volvoTheme, {
  logoImagesPath: "/logo/testpath/",
  fontsPath: "/fonts/testpath/"
});

export default function createSnapshot(component) {
  var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : baseTheme;
  components.forEach(function (component) {
    return addClassNameToTheme(theme, component);
  });
  return createFelaSnapshot(component, theme, getMonolithicRenderer(), StyleProvider, ThemeProvider);
}