function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from "react";
import { select, boolean } from "@storybook/addon-knobs";
import { ThemeProvider, RendererProvider } from "react-fela";
import { styleRenderer } from "./style-renderer";
import volvoTheme from "./themes/volvo";
import polestarTheme from "./themes/polestar";
var renderer = styleRenderer();
var themes = {
  volvo: volvoTheme,
  polestar: polestarTheme
};
var currentTheme = "volvo";
export function ThemeWrapper(_ref) {
  var children = _ref.children;
  var theme = select("theme", Object.keys(themes), currentTheme);
  currentTheme = theme;
  var rtl = boolean("rtl", false);
  var dir = rtl ? "rtl" : "ltr";
  document.body.setAttribute("dir", dir);
  return React.createElement(ThemeProvider, {
    theme: _objectSpread({}, themes[theme], {
      logoImagesPath: "/static/vcc-ui/images/",
      fontsPath: "/static/vcc-ui/fonts/",
      direction: dir
    })
  }, children);
}
export function StoryWrapper(_ref2) {
  var children = _ref2.children;
  return React.createElement(RendererProvider, {
    renderer: renderer
  }, React.createElement(ThemeWrapper, null, children));
}