"use strict";

var _react = _interopRequireDefault(require("react"));

var _ = require(".");

var _volvo = _interopRequireDefault(require("../../themes/volvo"));

var _createSnapshot = _interopRequireDefault(require("../../test/create-snapshot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var onChange = function onChange() {};

describe("<Toggle /> snapshot tests", function () {
  it("default props", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Toggle, {
      onChange: onChange
    }));
    expect(snapshot).toMatchSnapshot();
  });
  it("checked", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Toggle, {
      onChange: onChange,
      checked: true
    }));
    expect(snapshot).toMatchSnapshot();
  });
  it("RTL default props", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Toggle, {
      onChange: onChange
    }), _objectSpread({}, _volvo.default, {
      direction: "rtl"
    }));
    expect(snapshot).toMatchSnapshot();
  });
  it("RTL checked", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Toggle, {
      onChange: onChange,
      checked: true
    }), _objectSpread({}, _volvo.default, {
      direction: "rtl"
    }));
    expect(snapshot).toMatchSnapshot();
  });
});