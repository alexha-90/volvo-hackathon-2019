"use strict";

var _react = _interopRequireDefault(require("react"));

var _ = require(".");

var _createSnapshot = _interopRequireDefault(require("../../test/create-snapshot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

describe("<Box /> snapshot tests", function () {
  it("renders <Box /> component correctly with default props", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Box, null, "Children"));
    expect(snapshot).toMatchSnapshot();
  });
  it("renders <Box /> component correctly with a string given as 'as' prop", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Box, {
      as: "span"
    }, "Children"));
    expect(snapshot).toMatchSnapshot();
  });
  it("renders <Box /> component correctly with extended styles", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Box, {
      extend: {
        color: "blue"
      }
    }, "Children"));
    expect(snapshot).toMatchSnapshot();
  });
  it("renders <Box /> component correctly with a React element given as 'as' prop", function () {
    var CustomElement = function CustomElement(props) {
      return _react.default.createElement("h1", _extends({
        "data-custom": "true"
      }, props));
    };

    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Box, {
      as: CustomElement
    }, "Children"));
    expect(snapshot).toMatchSnapshot();
  });
  it("renders <Box /> component correctly with added custom className", function () {
    var snapshot = (0, _createSnapshot.default)(_react.default.createElement(_.Box, {
      className: "test-class"
    }, "Children"));
    expect(snapshot).toMatchSnapshot();
  });
});