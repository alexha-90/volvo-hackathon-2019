var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import hoistStatics from './hoistStatics';

export default function withThemeFactory(createElement, FelaTheme) {
  return function withTheme(component) {
    var propName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'theme';

    var WithTheme = function WithTheme(props) {
      return createElement(FelaTheme, undefined, function (theme) {
        return createElement(component, _extends({}, props, _defineProperty({}, propName, theme)));
      });
    };

    return hoistStatics(WithTheme, component);
  };
}