var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// Fe was heavily inspired by glam, both the code as well as the name
// https://github.com/threepointone/glam/blob/master/packages/glam/src/index.js#L83
export default function feFactory(createElement, FelaComponent) {
  return function fe(type) {
    for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (props) {
      var css = props.css,
          key = props.key,
          ref = props.ref,
          className = props.className,
          otherProps = _objectWithoutProperties(props, ['css', 'key', 'ref', 'className']);

      if (css) {
        return createElement(FelaComponent, {
          style: css,
          key: key,
          ref: ref
        }, function (renderProps) {
          return createElement.apply(undefined, [type, _extends({}, otherProps, {
            className: className ? className + ' ' + renderProps.className : renderProps.className
          })].concat(_toConsumableArray(children)));
        });
      }
    }

    return createElement.apply(undefined, [type, props].concat(_toConsumableArray(children)));
  };
}