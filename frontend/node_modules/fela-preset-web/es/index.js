function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

import extend from 'fela-plugin-extend';
import embedded from 'fela-plugin-embedded';
import prefixer from 'fela-plugin-prefixer';
import fallbackValue from 'fela-plugin-fallback-value';
import unit from 'fela-plugin-unit';

export var createWebPreset = function createWebPreset() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$extend = _ref.extend,
      extendConfig = _ref$extend === undefined ? [] : _ref$extend,
      _ref$unit = _ref.unit,
      unitConfig = _ref$unit === undefined ? [] : _ref$unit;

  return [extend.apply(undefined, _toConsumableArray(extendConfig)), embedded(), prefixer(), fallbackValue(), unit.apply(undefined, _toConsumableArray(unitConfig))];
};

export default createWebPreset();