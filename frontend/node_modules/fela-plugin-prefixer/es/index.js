function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { prefix } from 'inline-style-prefixer';
import cssifyObject from 'css-in-js-utils/lib/cssifyObject';
import objectReduce from 'fast-loops/lib/objectReduce';

import fallbackValue from 'fela-plugin-fallback-value';
import isPlainObject from 'isobject';

var resolveFallbackValues = fallbackValue();

function addVendorPrefixes(style) {
  return objectReduce(style, function (prefixedStyle, value, property) {
    if (isPlainObject(value)) {
      prefixedStyle[property] = addVendorPrefixes(value);
    } else {
      var prefixedDeclaration = prefix(_defineProperty({}, property, style[property]));
      var styleKeys = Object.keys(prefixedDeclaration);

      var referenceProperty = styleKeys[0];
      var referenceValue = prefixedDeclaration[referenceProperty];

      if (styleKeys.length === 1) {
        prefixedStyle[referenceProperty] = referenceValue;
      } else {
        delete prefixedDeclaration[referenceProperty];
        var inlinedProperties = cssifyObject(resolveFallbackValues(prefixedDeclaration));

        prefixedStyle[referenceProperty] = referenceValue + ';' + inlinedProperties;
      }
    }

    return prefixedStyle;
  }, {});
}

export default (function () {
  return addVendorPrefixes;
});