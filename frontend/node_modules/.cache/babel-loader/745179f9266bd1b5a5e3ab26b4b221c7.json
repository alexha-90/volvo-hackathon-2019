{"ast":null,"code":"var _jsxFileName = \"/Users/aha1/Desktop/car-share/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\"; // import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSelectCalendarDates = requested => {\n      this.setState({\n        loadingVehicleData: true\n      });\n      const availableVehs = [];\n      const reservationData = this.state.reservationData;\n\n      for (let i = 0; i < reservationData.length; i++) {\n        const iStartDate = convertStrToDate(reservationData[i].start_time);\n        const iEndDate = convertStrToDate(reservationData[i].end_time); // descr: requested START is ok if\n        //    1) After iStartDate OR\n        //    2) Same day as iStartDate, but in afternoon\n\n        console.log(requested.start.date > iStartDate);\n\n        if (requested.start.date > iStartDate || requested.start.date === iStartDate && requested.start.timeOfDay === \"afternoon\") {\n          debugger;\n        } else {\n          // invalid\n          debugger;\n        } // descr: requested END is ok if\n        //    1) Before iStartDate OR\n        //    2) Same day as iStartDate, but in morning\n\n\n        if (requested.end.date < iStartDate || requested.end.date === iStartDate && requested.end.timeOfDay === \"morning\") {\n          debugger;\n        } else {\n          // invalid\n          debugger;\n        }\n\n        console.log(iStartDate, iEndDate);\n        debugger; // availableVehs.push(reservationData[i])\n      }\n\n      this.setState({\n        availableVehicles: availableVehs,\n        loadingVehicleData: false\n      });\n    };\n\n    this.showCarPicker = () => {\n      if (this.state.loadingVehicleData) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Loading vehicle data...\");\n      } else if (this.state.availableVehicles.length > 0) {\n        return React.createElement(CarPicker, {\n          availableCars: this.state.availableVehicles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      } else {\n        return null; // return <div>No vehicles found for dates you provided :(</div>\n      }\n    };\n\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    };\n  }\n\n  componentDidMount() {\n    getVehicles().then(vehicles => {\n      vehicles.json().then(vehicleData => {\n        this.setState({\n          vehicleData: vehicleData\n        });\n        return strapi.getEntries(\"reservations\");\n      }).then(reservationData => {\n        this.setState({\n          reservationData: reservationData,\n          loadingReservationData: false\n        });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({\n        globalError: true,\n        loadingReservationData: false\n      });\n    });\n  }\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n\n    if (this.state.loadingReservationData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Loading reservation data...\");\n    }\n\n    if (this.state.globalError) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \":( Error occurred while fetching information. Please try again later\");\n    } else {\n      return React.createElement(\"main\", {\n        className: \"content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(NewCalendar, {\n        onSelectCalendarDates: this.onSelectCalendarDates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), this.showCarPicker());\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aha1/Desktop/car-share/frontend/src/App.js"],"names":["React","Component","Strapi","CarPicker","convertStrToDate","getVehicles","NewCalendar","strapi","App","constructor","onSelectCalendarDates","requested","setState","loadingVehicleData","availableVehs","reservationData","state","i","length","iStartDate","start_time","iEndDate","end_time","console","log","start","date","timeOfDay","end","availableVehicles","showCarPicker","loadingReservationData","vehicleData","globalError","componentDidMount","then","vehicles","json","getEntries","catch","err","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\n\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\";\n// import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    }\n  }\n\n  componentDidMount() {\n    getVehicles()\n      .then(vehicles => {vehicles.json()\n        .then(vehicleData => {\n          this.setState({ vehicleData: vehicleData });\n          return strapi.getEntries(\"reservations\");\n        })\n        .then(reservationData => {\n          this.setState({ reservationData: reservationData, loadingReservationData: false });\n        })\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({globalError: true, loadingReservationData: false });\n      })\n  }\n\n  onSelectCalendarDates = (requested) => {\n    this.setState({ loadingVehicleData: true });\n    const availableVehs = [];\n    const { reservationData } = this.state;\n    for (let i = 0; i < reservationData.length; i++) {\n      const iStartDate = convertStrToDate(reservationData[i].start_time);\n      const iEndDate = convertStrToDate(reservationData[i].end_time);\n\n      // descr: requested START is ok if\n      //    1) After iStartDate OR\n      //    2) Same day as iStartDate, but in afternoon\n      console.log(requested.start.date > iStartDate)\n      if (requested.start.date > iStartDate ||\n        (requested.start.date === iStartDate && requested.start.timeOfDay === \"afternoon\")\n      ) {\n        debugger;\n      } else {\n        // invalid\n        debugger;\n      }\n\n      // descr: requested END is ok if\n      //    1) Before iStartDate OR\n      //    2) Same day as iStartDate, but in morning\n      if (requested.end.date < iStartDate ||\n        (requested.end.date === iStartDate && requested.end.timeOfDay === \"morning\")\n      ) {\n        debugger;\n      } else {\n        // invalid\n        debugger;\n      }\n\n\n      console.log(iStartDate, iEndDate);\n      debugger;\n      // availableVehs.push(reservationData[i])\n    }\n    this.setState({ availableVehicles: availableVehs, loadingVehicleData: false})\n  };\n\n  showCarPicker = () => {\n    if (this.state.loadingVehicleData) {\n      return <div>Loading vehicle data...</div>\n    } else if (this.state.availableVehicles.length > 0) {\n      return <CarPicker availableCars={this.state.availableVehicles}/>\n    } else {\n      return null;\n      // return <div>No vehicles found for dates you provided :(</div>\n    }\n  };\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n    if (this.state.loadingReservationData) {\n      return <div>Loading reservation data...</div>\n    }\n    if (this.state.globalError) {\n      return <main>:( Error occurred while fetching information. Please try again later</main>\n    } else {\n      return (\n        <main className='content-container'>\n          <NewCalendar onSelectCalendarDates={this.onSelectCalendarDates}/>\n          {/*<CalendarComponent onSelectCalendarDates={this.onSelectCalendarDates}/>*/}\n          {this.showCarPicker()}\n        </main>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}