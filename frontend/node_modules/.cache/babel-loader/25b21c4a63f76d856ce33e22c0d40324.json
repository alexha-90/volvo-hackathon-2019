{"ast":null,"code":"var _jsxFileName = \"/Users/aha1/Desktop/car-share/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CalendarComponent from './DatePicker/Calendar';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\"; // import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSelectCalendarDates = requestedDates => {\n      // FIXME: should set a range - Morning (before 11:59am), Afternoon (after 12pm), \n      console.log('in parent component dates: ', requestedDates);\n      this.setState({\n        loadingVehicleData: true\n      });\n      const availableVehs = [];\n      const reservationData = this.state.reservationData;\n\n      for (let i = 0; i < reservationData.length; i++) {\n        if (reservationData[i].available) {\n          const currRentalStartDate = convertStrToDate(reservationData[i].current_rental_start_date, reservationData[i].current_rental_start_hour);\n          const currRentalEndDate = convertStrToDate(reservationData[i].current_rental_end_date, reservationData[i].current_rental_end_hour);\n\n          if (Math.abs(currRentalStartDate - requestedDates[0]) < 300001 || Math.abs(currRentalEndDate - requestedDates[1]) < 300001) {\n            // under 5 min gap difference, acceptable\n            break; // FIXME: vehicle not available\n          } else {\n            availableVehs.push(reservationData[i]);\n          }\n        }\n      }\n\n      this.setState({\n        availableVehicles: availableVehs,\n        loadingVehicleData: false\n      });\n    };\n\n    this.showCarPicker = () => {\n      if (this.state.loadingVehicleData) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Loading vehicle data...\");\n      } else if (this.state.availableVehicles.length > 0) {\n        return React.createElement(CarPicker, {\n          availableCars: this.state.availableVehicles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"No vehicles found for dates you provided :(\");\n      }\n    };\n\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    };\n  }\n\n  async componentDidMount() {\n    getVehicles().then(vehicles => {\n      vehicles.json().then(vehicleData => {\n        this.setState({\n          vehicleData: vehicleData\n        });\n        return strapi.getEntries(\"reservations\");\n      }).then(reservationData => {\n        this.setState({\n          reservationData: reservationData,\n          loadingReservationData: false\n        });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({\n        globalError: true,\n        loadingReservationData: false\n      });\n    });\n  }\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n\n    if (this.state.loadingReservationData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading reservation data...\");\n    }\n\n    if (this.state.globalError) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \":( Error occured while fetching vehicle information. Please try again later\");\n    } else {\n      return React.createElement(\"main\", {\n        className: \"content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(NewCalendar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.showCarPicker());\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aha1/Desktop/car-share/frontend/src/App.js"],"names":["React","Component","Strapi","CalendarComponent","CarPicker","convertStrToDate","getVehicles","NewCalendar","strapi","App","constructor","onSelectCalendarDates","requestedDates","console","log","setState","loadingVehicleData","availableVehs","reservationData","state","i","length","available","currRentalStartDate","current_rental_start_date","current_rental_start_hour","currRentalEndDate","current_rental_end_date","current_rental_end_hour","Math","abs","push","availableVehicles","showCarPicker","loadingReservationData","vehicleData","globalError","componentDidMount","then","vehicles","json","getEntries","catch","err","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CalendarComponent from './DatePicker/Calendar'\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\n\n\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\";\n// import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    }\n  }\n\n  async componentDidMount() {\n    getVehicles()\n      .then(vehicles => {vehicles.json()\n        .then(vehicleData => {\n          this.setState({ vehicleData: vehicleData });\n          return strapi.getEntries(\"reservations\");\n        })\n        .then(reservationData => {\n          this.setState({ reservationData: reservationData, loadingReservationData: false });\n        })\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({globalError: true, loadingReservationData: false });\n      })\n  }\n\n  onSelectCalendarDates = (requestedDates) => {\n    // FIXME: should set a range - Morning (before 11:59am), Afternoon (after 12pm), \n    console.log('in parent component dates: ', requestedDates);\n    this.setState({ loadingVehicleData: true });\n    const availableVehs = [];\n    const { reservationData } = this.state;\n    for (let i = 0; i < reservationData.length; i++) {\n      if (reservationData[i].available) {\n        const currRentalStartDate = convertStrToDate(reservationData[i].current_rental_start_date, reservationData[i].current_rental_start_hour);\n        const currRentalEndDate = convertStrToDate(reservationData[i].current_rental_end_date, reservationData[i].current_rental_end_hour);\n        if (Math.abs(currRentalStartDate - requestedDates[0]) < 300001 ||\n          Math.abs(currRentalEndDate - requestedDates[1]) < 300001\n        ) { // under 5 min gap difference, acceptable\n          break; // FIXME: vehicle not available\n        } else {\n          availableVehs.push(reservationData[i])\n        }\n      }\n    }\n    this.setState({ availableVehicles: availableVehs, loadingVehicleData: false})\n  };\n\n  showCarPicker = () => {\n    if (this.state.loadingVehicleData) {\n      return <div>Loading vehicle data...</div>\n    } else if (this.state.availableVehicles.length > 0) {\n      return <CarPicker availableCars={this.state.availableVehicles}/>\n    } else {\n      return <div>No vehicles found for dates you provided :(</div>\n    }\n  };\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n    if (this.state.loadingReservationData) {\n      return <div>Loading reservation data...</div>\n    }\n    if (this.state.globalError) {\n      return <main>:( Error occured while fetching vehicle information. Please try again later</main>\n    } else {\n      return (\n        <main className='content-container'>\n          <NewCalendar />\n          {/*<CalendarComponent onSelectCalendarDates={this.onSelectCalendarDates}/>*/}\n          {this.showCarPicker()}\n        </main>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}