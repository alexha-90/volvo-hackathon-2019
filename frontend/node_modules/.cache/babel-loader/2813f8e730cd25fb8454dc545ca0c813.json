{"ast":null,"code":"var _jsxFileName = \"/Users/aha1/Desktop/car-share/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\"; // import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSelectCalendarDates = requestedDates => {\n      console.log(requestedDates);\n      debugger;\n      this.setState({\n        loadingVehicleData: true\n      });\n      const availableVehs = [];\n      const reservationData = this.state.reservationData;\n\n      for (let i = 0; i < reservationData.length; i++) {\n        const currRentalStartDate = convertStrToDate(reservationData[i].start_time, reservationData[i].current_rental_start_hour);\n        const currRentalEndDate = convertStrToDate(reservationData[i].end_time, reservationData[i].current_rental_end_hour);\n\n        if (Math.abs(currRentalStartDate - requestedDates[0]) < 300001 || Math.abs(currRentalEndDate - requestedDates[1]) < 300001) {\n          // under 5 min gap difference, acceptable\n          break; // FIXME: vehicle not available\n        } else {\n          availableVehs.push(reservationData[i]);\n        }\n      }\n\n      this.setState({\n        availableVehicles: availableVehs,\n        loadingVehicleData: false\n      });\n    };\n\n    this.showCarPicker = () => {\n      if (this.state.loadingVehicleData) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Loading vehicle data...\");\n      } else if (this.state.availableVehicles.length > 0) {\n        return React.createElement(CarPicker, {\n          availableCars: this.state.availableVehicles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      } else {\n        return null; // return <div>No vehicles found for dates you provided :(</div>\n      }\n    };\n\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    };\n  }\n\n  componentDidMount() {\n    getVehicles().then(vehicles => {\n      vehicles.json().then(vehicleData => {\n        this.setState({\n          vehicleData: vehicleData\n        });\n        return strapi.getEntries(\"reservations\");\n      }).then(reservationData => {\n        this.setState({\n          reservationData: reservationData,\n          loadingReservationData: false\n        });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({\n        globalError: true,\n        loadingReservationData: false\n      });\n    });\n  }\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n\n    if (this.state.loadingReservationData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Loading reservation data...\");\n    }\n\n    if (this.state.globalError) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \":( Error occurred while fetching information. Please try again later\");\n    } else {\n      return React.createElement(\"main\", {\n        className: \"content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(NewCalendar, {\n        onSelectCalendarDates: this.onSelectCalendarDates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), this.showCarPicker());\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aha1/Desktop/car-share/frontend/src/App.js"],"names":["React","Component","Strapi","CarPicker","convertStrToDate","getVehicles","NewCalendar","strapi","App","constructor","onSelectCalendarDates","requestedDates","console","log","setState","loadingVehicleData","availableVehs","reservationData","state","i","length","currRentalStartDate","start_time","current_rental_start_hour","currRentalEndDate","end_time","current_rental_end_hour","Math","abs","push","availableVehicles","showCarPicker","loadingReservationData","vehicleData","globalError","componentDidMount","then","vehicles","json","getEntries","catch","err","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\n\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\";\n// import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    }\n  }\n\n  componentDidMount() {\n    getVehicles()\n      .then(vehicles => {vehicles.json()\n        .then(vehicleData => {\n          this.setState({ vehicleData: vehicleData });\n          return strapi.getEntries(\"reservations\");\n        })\n        .then(reservationData => {\n          this.setState({ reservationData: reservationData, loadingReservationData: false });\n        })\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({globalError: true, loadingReservationData: false });\n      })\n  }\n\n  onSelectCalendarDates = (requestedDates) => {\n    console.log(requestedDates);\n    debugger;\n    this.setState({ loadingVehicleData: true });\n    const availableVehs = [];\n    const { reservationData } = this.state;\n    for (let i = 0; i < reservationData.length; i++) {\n      const currRentalStartDate = convertStrToDate(reservationData[i].start_time, reservationData[i].current_rental_start_hour);\n      const currRentalEndDate = convertStrToDate(reservationData[i].end_time, reservationData[i].current_rental_end_hour);\n      if (Math.abs(currRentalStartDate - requestedDates[0]) < 300001 ||\n        Math.abs(currRentalEndDate - requestedDates[1]) < 300001\n      ) { // under 5 min gap difference, acceptable\n        break; // FIXME: vehicle not available\n      } else {\n        availableVehs.push(reservationData[i])\n      }\n    }\n    this.setState({ availableVehicles: availableVehs, loadingVehicleData: false})\n  };\n\n  showCarPicker = () => {\n    if (this.state.loadingVehicleData) {\n      return <div>Loading vehicle data...</div>\n    } else if (this.state.availableVehicles.length > 0) {\n      return <CarPicker availableCars={this.state.availableVehicles}/>\n    } else {\n      return null;\n      // return <div>No vehicles found for dates you provided :(</div>\n    }\n  };\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n    if (this.state.loadingReservationData) {\n      return <div>Loading reservation data...</div>\n    }\n    if (this.state.globalError) {\n      return <main>:( Error occurred while fetching information. Please try again later</main>\n    } else {\n      return (\n        <main className='content-container'>\n          <NewCalendar onSelectCalendarDates={this.onSelectCalendarDates}/>\n          {/*<CalendarComponent onSelectCalendarDates={this.onSelectCalendarDates}/>*/}\n          {this.showCarPicker()}\n        </main>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}