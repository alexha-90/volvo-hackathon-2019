{"ast":null,"code":"var _jsxFileName = \"/Users/aha1/Desktop/car-share/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\"; // import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSelectCalendarDates = requested => {\n      this.setState({\n        loadingVehicleData: true\n      });\n      const availableVehs = [];\n      const reservationData = this.state.reservationData;\n\n      for (let i = 0; i < reservationData.length; i++) {\n        const iStartDate = convertStrToDate(reservationData[i].start_time);\n        const iEndDate = convertStrToDate(reservationData[i].end_time); // descr: requested START is ok if\n        //    1) After iStartDate OR\n        //    2) Same day as iStartDate, but in afternoon\n\n        if (requested.start.date > iStartDate || requested.start.date === iStartDate && requested.start.timeOfDay === \"afternoon\") {\n          debugger;\n        } // descr: requested END is ok if\n        //    1) Before iStartDate OR\n        //    2) Same day as iStartDate, but in morning\n\n\n        if (requested.end.date < iStartDate || requested.end.date === iStartDate && requested.end.timeOfDay === \"morning\") {\n          debugger;\n        }\n\n        console.log(iStartDate, iEndDate);\n        debugger;\n\n        if (Math.abs(iStartDate - requested[0]) < 300001 || Math.abs(iEndDate - requested[1]) < 300001) {\n          // under 5 min gap difference, acceptable\n          break; // FIXME: vehicle not available\n        } else {\n          availableVehs.push(reservationData[i]);\n        }\n      }\n\n      this.setState({\n        availableVehicles: availableVehs,\n        loadingVehicleData: false\n      });\n    };\n\n    this.showCarPicker = () => {\n      if (this.state.loadingVehicleData) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Loading vehicle data...\");\n      } else if (this.state.availableVehicles.length > 0) {\n        return React.createElement(CarPicker, {\n          availableCars: this.state.availableVehicles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      } else {\n        return null; // return <div>No vehicles found for dates you provided :(</div>\n      }\n    };\n\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    };\n  }\n\n  componentDidMount() {\n    getVehicles().then(vehicles => {\n      vehicles.json().then(vehicleData => {\n        this.setState({\n          vehicleData: vehicleData\n        });\n        return strapi.getEntries(\"reservations\");\n      }).then(reservationData => {\n        this.setState({\n          reservationData: reservationData,\n          loadingReservationData: false\n        });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({\n        globalError: true,\n        loadingReservationData: false\n      });\n    });\n  }\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n\n    if (this.state.loadingReservationData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Loading reservation data...\");\n    }\n\n    if (this.state.globalError) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \":( Error occurred while fetching information. Please try again later\");\n    } else {\n      return React.createElement(\"main\", {\n        className: \"content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(NewCalendar, {\n        onSelectCalendarDates: this.onSelectCalendarDates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), this.showCarPicker());\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aha1/Desktop/car-share/frontend/src/App.js"],"names":["React","Component","Strapi","CarPicker","convertStrToDate","getVehicles","NewCalendar","strapi","App","constructor","onSelectCalendarDates","requested","setState","loadingVehicleData","availableVehs","reservationData","state","i","length","iStartDate","start_time","iEndDate","end_time","start","date","timeOfDay","end","console","log","Math","abs","push","availableVehicles","showCarPicker","loadingReservationData","vehicleData","globalError","componentDidMount","then","vehicles","json","getEntries","catch","err","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport CarPicker from './CarPicker';\nimport { convertStrToDate } from './util/DateFormat';\n\nimport { getVehicles } from './api';\nimport NewCalendar from \"./DatePicker\";\n// import { StyleProvider, ThemeProvider } from \"vcc-ui\";\n// import volvo from \"vcc-ui/lib/themes/volvo\";\n//============================================================================//\n\nconst strapi = new Strapi(\"http://localhost:1337\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loadingReservationData: true,\n      loadingVehicleData: false,\n      vehicleData: [],\n      reservationData: [],\n      globalError: false,\n      availableVehicles: []\n    }\n  }\n\n  componentDidMount() {\n    getVehicles()\n      .then(vehicles => {vehicles.json()\n        .then(vehicleData => {\n          this.setState({ vehicleData: vehicleData });\n          return strapi.getEntries(\"reservations\");\n        })\n        .then(reservationData => {\n          this.setState({ reservationData: reservationData, loadingReservationData: false });\n        })\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({globalError: true, loadingReservationData: false });\n      })\n  }\n\n  onSelectCalendarDates = (requested) => {\n    this.setState({ loadingVehicleData: true });\n    const availableVehs = [];\n    const { reservationData } = this.state;\n    for (let i = 0; i < reservationData.length; i++) {\n      const iStartDate = convertStrToDate(reservationData[i].start_time);\n      const iEndDate = convertStrToDate(reservationData[i].end_time);\n\n      // descr: requested START is ok if\n      //    1) After iStartDate OR\n      //    2) Same day as iStartDate, but in afternoon\n      if (requested.start.date > iStartDate ||\n        (requested.start.date === iStartDate && requested.start.timeOfDay === \"afternoon\")\n      ) {\n        debugger;\n      }\n\n      // descr: requested END is ok if\n      //    1) Before iStartDate OR\n      //    2) Same day as iStartDate, but in morning\n      if (requested.end.date < iStartDate ||\n        (requested.end.date === iStartDate && requested.end.timeOfDay === \"morning\")\n      ) {\n        debugger;\n      }\n\n\n      console.log(iStartDate, iEndDate);\n      debugger;\n\n      if (Math.abs(iStartDate - requested[0]) < 300001 ||\n        Math.abs(iEndDate - requested[1]) < 300001\n      ) { // under 5 min gap difference, acceptable\n        break; // FIXME: vehicle not available\n      } else {\n        availableVehs.push(reservationData[i])\n      }\n    }\n    this.setState({ availableVehicles: availableVehs, loadingVehicleData: false})\n  };\n\n  showCarPicker = () => {\n    if (this.state.loadingVehicleData) {\n      return <div>Loading vehicle data...</div>\n    } else if (this.state.availableVehicles.length > 0) {\n      return <CarPicker availableCars={this.state.availableVehicles}/>\n    } else {\n      return null;\n      // return <div>No vehicles found for dates you provided :(</div>\n    }\n  };\n\n  render() {\n    console.log('reservationData: ', this.state.reservationData);\n    console.log('vehicleData: ', this.state.vehicleData);\n    if (this.state.loadingReservationData) {\n      return <div>Loading reservation data...</div>\n    }\n    if (this.state.globalError) {\n      return <main>:( Error occurred while fetching information. Please try again later</main>\n    } else {\n      return (\n        <main className='content-container'>\n          <NewCalendar onSelectCalendarDates={this.onSelectCalendarDates}/>\n          {/*<CalendarComponent onSelectCalendarDates={this.onSelectCalendarDates}/>*/}\n          {this.showCarPicker()}\n        </main>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}